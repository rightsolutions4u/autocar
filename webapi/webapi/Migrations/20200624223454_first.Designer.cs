// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using webapi.Data;

namespace webapi.Migrations
{
    [DbContext(typeof(SiteContext))]
    [Migration("20200624223454_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("webapi.Models.AdminUserRoles", b =>
                {
                    b.Property<string>("AdminUserId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<int>("RoleId")
                        .HasMaxLength(50);

                    b.HasKey("AdminUserId");

                    b.ToTable("adminuserroles");
                });

            modelBuilder.Entity("webapi.Models.AdminUsers", b =>
                {
                    b.Property<string>("AdminUserId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("AdminUserPwd")
                        .HasMaxLength(50);

                    b.HasKey("AdminUserId");

                    b.ToTable("adminusers");
                });

            modelBuilder.Entity("webapi.Models.AutosBuyer", b =>
                {
                    b.Property<string>("BuyrID")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30);

                    b.Property<int>("AutoId");

                    b.Property<string>("BuType")
                        .HasMaxLength(20);

                    b.Property<string>("CellPn1")
                        .HasMaxLength(20);

                    b.Property<string>("CellPn2")
                        .HasMaxLength(20);

                    b.Property<string>("CityNm")
                        .HasMaxLength(45);

                    b.Property<string>("CnName")
                        .HasMaxLength(45);

                    b.Property<string>("EmalID")
                        .HasMaxLength(45);

                    b.Property<string>("FsName")
                        .HasMaxLength(45);

                    b.Property<string>("HomePn")
                        .HasMaxLength(20);

                    b.Property<string>("LsName")
                        .HasMaxLength(45);

                    b.Property<string>("StatNm")
                        .HasMaxLength(45);

                    b.Property<string>("Street")
                        .HasMaxLength(100);

                    b.Property<string>("WorkPn")
                        .HasMaxLength(20);

                    b.Property<string>("ZipCod")
                        .HasMaxLength(45);

                    b.HasKey("BuyrID");

                    b.ToTable("autosbuyer");
                });

            modelBuilder.Entity("webapi.Models.AutosSeller", b =>
                {
                    b.Property<string>("SellID")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30);

                    b.Property<string>("CellPn1")
                        .HasMaxLength(20);

                    b.Property<string>("CellPn2")
                        .HasMaxLength(20);

                    b.Property<string>("CityNm")
                        .HasMaxLength(45);

                    b.Property<string>("CnName")
                        .HasMaxLength(45);

                    b.Property<string>("EmalID")
                        .HasMaxLength(45);

                    b.Property<string>("FsName")
                        .HasMaxLength(45);

                    b.Property<string>("HomePn")
                        .HasMaxLength(20);

                    b.Property<string>("LsName")
                        .HasMaxLength(45);

                    b.Property<string>("StatNm")
                        .HasMaxLength(45);

                    b.Property<string>("Street")
                        .HasMaxLength(100);

                    b.Property<string>("WorkPn")
                        .HasMaxLength(20);

                    b.Property<string>("ZipCod")
                        .HasMaxLength(45);

                    b.HasKey("SellID");

                    b.ToTable("autosseller");
                });

            modelBuilder.Entity("webapi.Models.AutosVehicle", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Acolor")
                        .HasMaxLength(30);

                    b.Property<int>("AuYear");

                    b.Property<string>("BodyId");

                    b.Property<string>("CatgId");

                    b.Property<string>("CityNm")
                        .HasMaxLength(45);

                    b.Property<string>("CnName")
                        .HasMaxLength(45);

                    b.Property<int>("Cosumption");

                    b.Property<string>("Engine")
                        .HasMaxLength(45);

                    b.Property<string>("FuelType")
                        .HasMaxLength(45);

                    b.Property<int>("IsFeatured");

                    b.Property<int>("IsReserved");

                    b.Property<int>("IsSold");

                    b.Property<int>("IsTrendy");

                    b.Property<string>("MakeId");

                    b.Property<string>("Mileag")
                        .HasMaxLength(45);

                    b.Property<string>("ModlId");

                    b.Property<int>("NoOfDoors");

                    b.Property<string>("Power")
                        .HasMaxLength(45);

                    b.Property<int>("Seater");

                    b.Property<string>("SellID");

                    b.Property<int>("SellPri");

                    b.Property<string>("StatNm")
                        .HasMaxLength(45);

                    b.Property<string>("Street")
                        .HasMaxLength(100);

                    b.Property<string>("Transmission")
                        .HasMaxLength(45);

                    b.Property<int>("Volume");

                    b.Property<string>("ZipCod")
                        .HasMaxLength(45);

                    b.HasKey("AutoId");

                    b.HasIndex("BodyId");

                    b.HasIndex("CatgId");

                    b.HasIndex("MakeId");

                    b.HasIndex("ModlId");

                    b.ToTable("AutosVehicle");
                });

            modelBuilder.Entity("webapi.Models.CarBody", b =>
                {
                    b.Property<string>("BodyId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30);

                    b.Property<string>("BDDesc")
                        .HasMaxLength(100);

                    b.HasKey("BodyId");

                    b.ToTable("carbody");
                });

            modelBuilder.Entity("webapi.Models.CarCategory", b =>
                {
                    b.Property<string>("CatgId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30);

                    b.Property<string>("CgDesc")
                        .HasMaxLength(100);

                    b.HasKey("CatgId");

                    b.ToTable("carcategory");
                });

            modelBuilder.Entity("webapi.Models.CarMake", b =>
                {
                    b.Property<string>("MakeId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30);

                    b.Property<string>("MkDesc")
                        .HasMaxLength(100);

                    b.HasKey("MakeId");

                    b.ToTable("carmake");
                });

            modelBuilder.Entity("webapi.Models.CarModel", b =>
                {
                    b.Property<string>("ModlId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30);

                    b.Property<string>("MdDesc")
                        .HasMaxLength(100);

                    b.HasKey("ModlId");

                    b.ToTable("carmodel");
                });

            modelBuilder.Entity("webapi.Models.OrderDetails", b =>
                {
                    b.Property<int>("TRREFN");

                    b.Property<DateTime>("TRDATE");

                    b.Property<string>("AutoID")
                        .HasMaxLength(30);

                    b.Property<string>("BuyrID")
                        .HasMaxLength(30);

                    b.Property<string>("CRDCRV")
                        .HasMaxLength(3);

                    b.Property<DateTime>("CRDEXP");

                    b.Property<string>("CRDNUM")
                        .HasMaxLength(30);

                    b.Property<string>("CRDTYP")
                        .HasMaxLength(1);

                    b.Property<int>("INVNUM");

                    b.Property<int>("PURAMT");

                    b.Property<DateTime>("PURDAT")
                        .HasMaxLength(1);

                    b.Property<string>("PURTYP");

                    b.HasKey("TRREFN", "TRDATE");

                    b.HasAlternateKey("TRDATE", "TRREFN");

                    b.ToTable("orderdetails");
                });

            modelBuilder.Entity("webapi.Models.OrderMaster", b =>
                {
                    b.Property<int>("INVNUM");

                    b.Property<DateTime>("TRDATE");

                    b.Property<int>("AMOUNT");

                    b.Property<string>("BUYRID")
                        .HasMaxLength(30);

                    b.Property<int>("PartialPayment");

                    b.HasKey("INVNUM", "TRDATE");

                    b.ToTable("orderMaster");
                });

            modelBuilder.Entity("webapi.Models.Roles", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("RoleDesc")
                        .HasMaxLength(100);

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("webapi.Models.SiteUsers", b =>
                {
                    b.Property<string>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<int>("IsActive")
                        .HasMaxLength(50);

                    b.Property<int>("IsDeleted");

                    b.Property<DateTime>("RegDate");

                    b.Property<string>("UserEmail")
                        .HasMaxLength(50);

                    b.Property<string>("UserFName")
                        .HasMaxLength(50);

                    b.Property<string>("UserLName")
                        .HasMaxLength(50);

                    b.Property<string>("UserMName")
                        .HasMaxLength(50);

                    b.Property<string>("UserPassword")
                        .HasMaxLength(50);

                    b.Property<string>("UserType")
                        .HasMaxLength(50);

                    b.HasKey("UserId");

                    b.ToTable("SiteUsers");
                });

            modelBuilder.Entity("webapi.Models.Vehiclefeatures", b =>
                {
                    b.Property<string>("FEATID")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("FTDESC")
                        .HasMaxLength(100);

                    b.HasKey("FEATID");

                    b.ToTable("vehiclefeatures");
                });

            modelBuilder.Entity("webapi.Models.AutosVehicle", b =>
                {
                    b.HasOne("webapi.Models.CarBody", "CarBody")
                        .WithMany()
                        .HasForeignKey("BodyId");

                    b.HasOne("webapi.Models.CarCategory", "CarCategory")
                        .WithMany()
                        .HasForeignKey("CatgId");

                    b.HasOne("webapi.Models.CarMake", "CarMake")
                        .WithMany()
                        .HasForeignKey("MakeId");

                    b.HasOne("webapi.Models.CarModel", "CarModel")
                        .WithMany()
                        .HasForeignKey("ModlId");
                });
#pragma warning restore 612, 618
        }
    }
}
